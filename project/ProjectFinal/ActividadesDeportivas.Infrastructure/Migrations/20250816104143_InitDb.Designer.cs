// <auto-generated />
using System;
using ActividadesDeportivas.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActividadesDeportivas.Infrastructure.Migrations
{
    [DbContext(typeof(ActividadesDbContext))]
    [Migration("20250816104143_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.ActividadFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<float>("CaloriasQuemadas")
                        .HasColumnType("real");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioDeportivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDeportivoId");

                    b.ToTable("ActividadesFisicas");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.EstadisticaProgreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<float>("GrasaCorporal")
                        .HasColumnType("real");

                    b.Property<float>("IMC")
                        .HasColumnType("real");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int>("UsuarioDeportivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDeportivoId");

                    b.ToTable("EstadisticasProgreso");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.ResumenDiarioFitbit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("CaloriasQuemadas")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinutosSedentarios")
                        .HasColumnType("int");

                    b.Property<int>("Pasos")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioDeportivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioDeportivoId");

                    b.ToTable("ResumenesDiariosFitbit");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.UsuarioDeportivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<float>("Altura")
                        .HasColumnType("real");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("UsuariosDeportivos");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.ActividadFisica", b =>
                {
                    b.HasOne("ActividadesDeportivas.Domain.Entities.UsuarioDeportivo", "UsuarioDeportivo")
                        .WithMany("Actividades")
                        .HasForeignKey("UsuarioDeportivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDeportivo");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.EstadisticaProgreso", b =>
                {
                    b.HasOne("ActividadesDeportivas.Domain.Entities.UsuarioDeportivo", "UsuarioDeportivo")
                        .WithMany("EstadisticasProgreso")
                        .HasForeignKey("UsuarioDeportivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDeportivo");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.ResumenDiarioFitbit", b =>
                {
                    b.HasOne("ActividadesDeportivas.Domain.Entities.UsuarioDeportivo", "UsuarioDeportivo")
                        .WithMany("ResumenesDiarios")
                        .HasForeignKey("UsuarioDeportivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioDeportivo");
                });

            modelBuilder.Entity("ActividadesDeportivas.Domain.Entities.UsuarioDeportivo", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("EstadisticasProgreso");

                    b.Navigation("ResumenesDiarios");
                });
#pragma warning restore 612, 618
        }
    }
}
